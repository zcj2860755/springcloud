<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zdzc.dao.TSysProjectMapper">
  <resultMap id="BaseResultMap" type="com.zdzc.model.TSysProject">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <result column="cascade_id" jdbcType="VARCHAR" property="cascadeId" />
    <result column="pro_code" jdbcType="VARCHAR" property="proCode" />
    <result column="pro_name" jdbcType="VARCHAR" property="proName" />
    <result column="contacts" jdbcType="VARCHAR" property="contacts" />
    <result column="is_leaf" jdbcType="INTEGER" property="isLeaf" />
    <result column="orders" jdbcType="VARCHAR" property="orders" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_enable" jdbcType="INTEGER" property="isEnable" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="parentName" jdbcType="VARCHAR" property="parentName" />
  </resultMap>


  <sql id="Base_Column_List" >
    id,parent_id,cascade_id,pro_code,pro_name,contacts,is_leaf,orders,remark,is_enable,create_time,account_id
  </sql>

  <select id="selectParamsBySreach" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_sys_project
    <where>
      <if test="searchContent != null">
        (pro_name like concat('%',#{searchContent},'%') or pro_code like concat('%',#{searchContent},'%'))
      </if>
      <if test="id!=null">
        and id = #{id}
      </if>
      <if test="cascadeId!=null">
        and cascade_id like concat(#{cascadeId},'%')
      </if>
        <if test="parentCascadeId!=null">
            and cascade_id like concat(#{parentCascadeId},'%')
        </if>
    </where>
      order by orders
 </select>


  <select id="selectParamsNot" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_sys_project
    <where>
      <if test="id != null">
        id != #{id}
      </if>
      <if test="parentId!=null">
        and parent_id = #{parentId}
      </if>
    </where>
    order by orders
  </select>

  <select id="selectProjectByIdAndCascade" resultType="java.lang.String">
    select id from t_sys_project
    <where>
      is_enable = 0
      <if test="id != null and cascadeId != null">
        and (id=#{id} or cascade_id  like concat('%',#{cascadeId},'%'))
      </if>
      <if test="id != null and cascadeId == null">
        and id=#{id}
      </if>
    </where>
  </select>


  <select id="selectProjectNameCount" resultType="java.lang.Integer">
    select count(1) from t_sys_project
    <where>
      <if test="proName != null">
        pro_name=#{proName}
      </if>
      <if test="id != null">
        and id !=#{id}
      </if>
    </where>
  </select>

  <select id="selectProjectAllPath" resultType="java.lang.String">
    select GROUP_CONCAT(pro_name SEPARATOR #{seperator}) as parentName
      from t_sys_project
    <where>
      id in
      <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </where>
  </select>
</mapper>
